{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;;;;ACPgE;AACM;;;IAkDxE,CAAC;IAZC,sCAAe,GAAf;QACE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAED,qCAAc,GAAd,UAAe,MAAM;QACnB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;QAC3C,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;IAChD,CAAC;IAED,gCAAS,GAAT,UAAU,OAAO;QACf,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;;iCA9BA,uDAAS,SAAC,qFAAiC;;IADjC,YAAY;QAhBxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,kXAYT;SACF,CAAC;OACW,YAAY,CAgCxB;IAAD,mBAAC;CAAA;AAhCwB;;;;;;;;;;;;;;;;;;;;;;ACnBiC;AACjB;AAEe;AACT;AACsB;;;IAa5C,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,kFAA8B;gBAC9B,oEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AClBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;;;IAMM,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACT7B;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.a5fb6c7ad1fdf0232a9d.js","sourcesContent":["// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport { BarcodeScannerLivestreamComponent } from \"ngx-barcode-scanner\";\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <barcode-scanner-livestream\n        [type]=\"['code_39', 'ean']\"\n        (valueChanges)=\"onValueChanges($event)\"\n        (started)=\"(onStarted)\"\n    ></barcode-scanner-livestream>\n    <div [hidden]=\"!barcodeValue\">\n      Code : {{  barcodeValue }}\n    </div>\n    <div [hidden]=\"!barcodeValue\">\n      Format : {{ barcodeFormat }}\n    </div>\n  `\n})\nexport class AppComponent implements AfterViewInit{\n  @ViewChild(BarcodeScannerLivestreamComponent)\n  barcodeScanner: BarcodeScannerLivestreamComponent;\n  //BARCODE_TYPES = [\n  //   'code_128',\n  //   'code_39',\n  //   'code_39_vin',\n  //   'ean',\n  //   'ean_extended',\n  //   'ean_8',\n  //   'upc',\n  //   'upc_e',\n  //   'codabar',\n  //   'i2of5',\n  //   '2of5',\n  //   'code_93'\n  //   ];\n  barcodeValue;\n  barcodeFormat;\n\n  ngAfterViewInit() {\n    this.barcodeScanner.start();\n  }\n\n  onValueChanges(result) {\n    this.barcodeValue = result.codeResult.code;\n    this.barcodeFormat = result.codeResult.format;\n  }\n\n  onStarted(started) {\n    console.log(started);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BarcodeScannerLivestreamModule } from \"ngx-barcode-scanner\";\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BarcodeScannerLivestreamModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}